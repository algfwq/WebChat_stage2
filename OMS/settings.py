"""
Django settings for OMS project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o9k1ebe@%t3tp9^@7w81-dnfs+jb*&3hh@d1q5pz5fpu^ze_a='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',  # 将此行从 'DEBUG' 更改为 'INFO'
            'class': 'logging.FileHandler',
            'filename': 'django_info.log',  # 可以更改文件名以反映日志级别
            'formatter': 'verbose',
            'encoding': 'utf-8',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

#Redis缓存配置
CACHES = {
    'default': {
        #后端，必选，固定
        'BACKEND': 'django.core.cache.backends.redis.RedisCache',
        #必选，格式为：redis://username:password@host:port(redis端口默认6379)
        #无验证就是：redis://127.0.0.1:6379
        #仅密码验证就是：redis://:password@127.0.0.1:6379
        #完全验证就是：redis://username:password@127.0.0.1:6379
        'LOCATION': 'redis://127.0.0.1:6379',
        #可选,传递给后端的选项，根据后端的不同，参数也会不同
        'OPTIONS': {
            #选择数据库0，redis默认附带16个逻辑数据库(0-15)
            'db': '0',
            #连接池类
            'pool_class': 'redis.ConnectionPool'
        }
    }
}

#发送邮件配置
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True  # 是否使用TLS安全传输协议(用于在两个通信应用程序之间提供保密性和数据完整性。)
EMAIL_USE_SSL = False  # 是否使用SSL加密，qq企业邮箱要求使用
EMAIL_HOST = 'smtp.office365.com'
# EMAIL_HOST = "smtp-mail.outlook.com"
EMAIL_PORT = 587  # 发件箱的SMTP服务器端口
EMAIL_HOST_USER = 'algpythontest@outlook.com'  # 发送邮件的邮箱地址
EMAIL_HOST_PASSWORD = 'ss699610'  #smtp.office365.com邮箱可以直接使用密码
EMAIL_FROM = 'algpythontest@outlook.com' #必须与EMAIL_HOST_USER相同
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER  #使用smtp.office365.com邮件服务器时，必须设置DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

#celery配置内容
CELERY_BROKER_URL = os.environ.get('CELERY_BROKER_URL', 'redis://:@127.0.0.1:6379/0')
# 存储结果后端
CELERY_RESULT_BACKEND = os.environ.get('CELERY_RESULT_BACKEND', 'redis://127.0.0.1:6379/7')

# 时区
CELERY_TIMEZONE = 'Asia/Shanghai'
CELERY_TASK_SERIALIZER = 'json'
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60

# redis  相关配置信息
REDIS_HOST = "127.0.0.1"
REDIS_PORT = 6379  # 端口
REDIS_PASSWORD = ""
REDIS_SSL_STATUS = False  # 是否需要SSL
REDIS_BASE_URL = "redis://127.0.0.1:6379/"  # 基础连接-用于连接池

#channels通道配置
# CHANNEL_LAYERS = {
#     "default": {
#         "BACKEND": "channels.layers.InMemoryChannelLayer"
#     }
# }
#需要同时运行Redis服务器文件
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}

INSTALLED_APPS = [
    'daphne',   #注册daphne组件，在channels4.0开始，注册组件使用daphne,一定放在开头
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app',
]

#添加该选项，表示django以asgi的模式启动
ASGI_APPLICATION = 'OMS.asgi.application'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'OMS.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'OMS.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
